name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create kubeconfig
#         run: |
#           mkdir ${HOME}/.kube
#           echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config
#           echo ${{ secrets.KUBE_KEY }} | base64 --decode > ${HOME}/.kube/jimber-prod2.key
#           echo ${{ secrets.KUBE_CRT }} | base64 --decode > ${HOME}/.kube/jimber-prod2.crt
#           cat ${HOME}/.kube/config
        run: |
          mkdir ${HOME}/.kube
          echo ${{ secrets.KUBE_KEY }} | base64 --decode > ${HOME}/.kube/jimber-prod2.key
          echo ${HOME}/.kube/jimber-prod2.key
          echo ${{ secrets.KUBE_CRT }} | base64 --decode > ${HOME}/.kube/jimber-prod2.crt
          echo ${HOME}/.kube/jimber-prod2.crt
      - name: context
        run: |
          echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ${HOME}/.kube/config
          cat ${HOME}/.kube/config
          
#           
          
#       - name: Use context
#         run: kubectl config use-context jimber
      - name: deploy to kubernetes
        run: helm ls
          
          
#       - name: Build the Docker image
#         run: docker build . --file Dockerfile --tag laurensdruwel0/news:${{ github.sha }}
#       - name: Log into GitHub Container Registry
#         run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
#       - name: Push to dockerhub
#         run: docker push laurensdruwel0/news:${{ github.sha }}
#       - name: Push latest to dockerhub
#         run: |
#           docker tag laurensdruwel0/news:${{ github.sha }} laurensdruwel0/news:latest
#           docker push laurensdruwel0/news:latest
#   deploy:
#     needs: [build]
#     runs-on: self-hosted
#     steps:
#       - name: remove current running container
#         run: echo "test"
#       - name: create instance
#         run: kubectl 
#       - name: run container
#         run: echo "run container"
